<<<<<<< HEAD
rom.dat <- read.csv(file.choose(), row.names = NULL)
rom.dat <- read.csv(file.choose(), row.names = NULL)
print(rom.dat)
mean(rom.dat$Flexion)
=======
rom.dat <- read.csv(file.choose)
rom.dat <- read.csv(file.choose())
rom.dat <- read.csv(file.choose(), row.names = NULL)
View(rom.dat)
rom.dat <- read.csv(file.choose(), row.names = NULL)
rom.dat$Genus$Papio
mean(rom.dat$Flexion, rom.dat$Genus = "Papio")
rom.dat.papio <- read.csv(file.choose(), row.names = NULL)
View(rom.dat.papio)
View(rom.dat.papio)
rom.dat.pan <- read.csv(file.choose(), row.names = NULL)
rom.dat.macaca <- read.csv(file.choose(), row.names = NULL)
View(rom.dat.pan)
View(rom.dat.pan)
View(rom.dat.macaca)
View(rom.dat.macaca)
mean(rom.dat.macaca$Sex)
rom.dat.papio
plot(rom.dat.macaca$Flexion)
plot(rom.dat.macaca$Sex)
plot(rom.dat.pan$Sex)
mean(rom.dat.papio$Flexion[1:5])
mean(rom.dat.pan$Flexion[1,5,7])
<<<<<<< HEAD
>>>>>>> 20531fd9ea7bb3acb22b3262aae4a533b758560b
knitr::opts_chunk$set(echo = TRUE)
---
title: "Plots_ROM_Morph"
author: "Haesu"
date: "3/12/2020"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r cars}
summary(cars)
```
## Including Plots
You can also embed plots, for example:
```{r pressure, echo=FALSE}
plot(pressure)
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
#Plot of primate Range Of Motion (ROM) and morphology data
```{r}
var <- read.csv(file.choose())
```
var <- read.csv(file.choose())
var <- read.csv(file.choose())
View(var)
View(var)
rom.dat <- read.csv(file.choose())
morph.dat <- read.csv(file.choose())
morph.dat <- read.csv(file.choose())
morph.dat <- read.csv(file.choose())
View(rom.dat)
View(rom.dat)
install.packages("car")
install.packages("car")
library(car)
index33 <- which(rom.dat$Flexion==33)
flexionDat <- rom.dat$Flexion[index16]
install.packages("car")
library(car)
index33 <- which(rom.dat$Flexion==33)
flexionDat <- rom.dat$Flexion[index33]
qqPlot(flexionDat)
install.packages("car")
install.packages("car")
library(car)
index33 <- which(rom.dat$Flexion==33)
flexionDat <- rom.dat$Flexion[index33]
qqPlot(flexionDat)
install.packages("car")
install.packages("car")
library(car)
index33 <- which(rom.dat$Flexion==33)
flexionDat <- rom.dat$Flexion[index33]
qqPlot(flexionDat)
install.packages("car")
knitr::opts_chunk$set(echo = TRUE)
boxplot(Extension ~ Flexion, data = rom.data,
varwidth = TRUE, log = "y", las = 1)
boxplot(Extension ~ Flexion, data = rom.dat,
varwidth = TRUE, log = "y", las = 1)
title("Range of motion: Extension over Flexion")
boxplot(Extension ~ Flexion, data = rom.dat,
varwidth = TRUE, log = "y", las = 1)
title("Range of motion: Extension vs. Flexion")
install.packages("car")
library(car)
index33 <- which(rom.dat$Flexion==33)
flexionDat <- rom.dat$Flexion[index33]
qqPlot(flexionDat)
qqPlot(rom.dat$Flexion)
qqPlot(rom.dat$Flexion)
boxplot(rom.dat)
install.packages("car")
library(car)
indexF <- which(rom.dat$Sex=="F")
flexionDat <- rom.dat$Flexion[indexF]
qqPlot(flexionDat)
#qqPlot(rom.dat$Flexion)
indexF <- which(rom.dat$Sex=="F")
flexionDat <- rom.dat$Flexion[indexF]
qqPlot(flexionDat)
#qqPlot(rom.dat$Flexion)
indexF <- which(rom.dat$Sex=="F")
#flexionDat <- rom.dat$F[indexF]
qqPlot(indexF)
#qqPlot(rom.dat$Flexion)
boxplot(ThighLength ~ InternalRation, data = rom.dat,
varwidth = TRUE, log = "y", las = 1)
boxplot(ThighLength ~ InternalRotation, data = rom.dat,
varwidth = TRUE, log = "y", las = 1)
title("Range of motion: Thigh Length, Flexion")
boxplot(ThighLength ~ InternalRotation, data = rom.dat,
varwidth = TRUE, las = 1,)
boxplot(ThighLength ~ InternalRotation, data = rom.dat,
varwidth = TRUE, log = "y", las = 1,)
boxplot(ThighLength ~ InternalRotation, data = rom.dat,
varwidth = TRUE, log = "y", las = 1,)
boxplot(ThighLength ~ InternalRotation, data = rom.dat,
varwidth = TRUE, log = "y", las = 1)
title("Range of motion: Thigh Length, Flexion")
boxplot(ThighLength ~ InternalRotation, data = rom.dat,
varwidth = TRUE, las = 1)
title("Range of motion: Thigh Length, Flexion")
boxplot(ThighLength ~ InternalRotation, data = rom.dat,
varwidth = TRUE, log = "y", las = 1)
title("Range of motion: Thigh Length, Flexion")
---
title: "Plots_ROM_Morph"
author: "Haesu"
date: "3/12/2020"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r cars}
summary(cars)
```
## Including Plots
You can also embed plots, for example:
```{r pressure, echo=FALSE}
plot(pressure)
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
#Plot of primate Range Of Motion (ROM) and morphology data
```{r}
rom.dat <- read.csv(file.choose())
```
```{r}
morph.dat <- read.csv(file.choose())
```
#install.packages("car")
#library(car)
#q-q plot
```{r}
indexF <- which(rom.dat$Sex == "F")
#flexionDat <- rom.dat$F[indexF]
qqPlot(indexF)
#qqPlot(rom.dat$Flexion)
```
#boxplot
```{r}
boxplot(Extension ~ Flexion, data = rom.dat,
varwidth = TRUE, log = "y", las = 1)
title("Range of motion: Extension vs. Flexion")
boxplot(rom.dat)
```
#boxplot 2
```{r}
boxplot(ThighLength ~ InternalRotation, data = rom.dat,
varwidth = TRUE, log = "y", las = 1)
title("Range of motion: Thigh Length, Flexion")
```
#scatterplot
scatterplot = plt.plot(ThighLength, InternalRotation, data = rom.dat
marker='.', linestyle='none')
#scatterplot
knitr::opts_chunk$set(echo = TRUE)
rom.dat <- read.csv(file.choose())
morph.dat <- read.csv(file.choose())
morph.dat <- read.csv(file.choose())
rom.dat <- read.csv(file.choose())
scatterplot = plt.plot(ThighLength, InternalRotation, data = rom.dat
marker='.', linestyle='none')
par(mfrow = c(1, 2))
plot(rom.dat$Thigh Length, rom.dat$Internal Rotation)
par(mfrow = c(1, 2))
plot(rom.dat$ThighLength, rom.dat$InternalRotation)
par(mfrow = c(1, 2))
plot(rom.dat$Extension, rom.dat$Flexion)
par(mfrow = c(1, 2))
plot(rom.dat$Extension, rom.dat$Flexion)
scatterplot = plot(rom.dat$ThighLength, rom/dat$InternalRotation, data = rom.dat
marker='.', linestyle='none')
scatterplot = plot(rom.dat$ThighLength, rom/dat$InternalRotation, data = rom.dat, linestyle='none')
scatterplot = plot(rom.dat$ThighLength, rom.dat$InternalRotation, data = rom.dat, linestyle='none')
plot(morph.dat$FemurHead, rom.dat$Abduction, xlab = "ThighLength"), ylab = "Abduction")
plot(morph.dat$ThighLength, rom.dat$Abduction, xlab = "ThighLength", ylab = "Abduction")
plot(rom.dat$ThighLength, rom.dat$Abduction, pch = 17, col = "blue")
=======
rom.dat.papio
rom.dat.papio <- read.csv(file.choose(), row.names = NULL)
rom.dat.pan <- read.csv(file.choose(), row.names = NULL)
rom.dat.macaca <- read.csv(file.choose(), row.names = NULL)
boxplot(rom.dat.pan)
View(rom.dat.pan)
View(rom.dat.pan)
pan.mean <- c(mean(rom.dat.pan$Extension), mean(rom.dat.pan$Flexion), mean(rom.dat.pan$Abduction))
pan.mean
papio.mean <- c(mean(rom.dat.papio$Extension), mean(rom.dat.papio$Flexion), mean(rom.dat.papio$Abduction))
papio.mean
pan.papio.mean <- matrix(pan.mean, papio.mean)
View(pan.papio.mean)
View(pan.papio.mean)
pan.papio.mean <- matrix(pan.mean, papio.mean, nrow = 2, ncol = 3)
View(pan.papio.mean)
pan.papio.mean <- rbind(pan.mean, papio.mean)
pan.papio.mean
View(pan.papio.mean)
View(pan.papio.mean)
is.na(rom.dat.papio$BiiliacBreadth)
rom.dat.pan
is.na(rom.dat.pan$BiiliacBreadth)
mean(rom.dat.pan$DistanceBetweenKnees)
mean(rom.dat.pan$DistanceBetweenKnees, na.rm=TRUE)
rom.dat.pan.na <- na.omit(rom.dat.pan)
mean(rom.dat.pan.na)
rom.dat.papio
mean(rom.dat.papio$Abduction)
install.packages("car")
>>>>>>> 63f54cf1687d46cb175f0c7aa8433080e0b6b1ce
